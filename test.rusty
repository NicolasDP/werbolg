fn mul(x, y) {
    x * y
}

// Calculate the factorial of a number
fn factorial(x) {
    if x == 0 {
        1
    } else {
        mul(x, factorial(x - 1))
    }
}

// Calculate the factorial of a number, using a tail recursive function
fn factorial_tco(acc, x) {
    if x == 0 {
        acc
    } else {
        factorial_tco(x * acc, x - 1)
    }
}

fn main() {
    let z = factorial(4);
    let z2 = factorial_tco(1, 4);
    z + z2
}
